<style>
  .dashboard-container {
    max-width: 800px;
    margin: 2rem auto;
    padding: 2rem;
  }
  .dashboard-header {
    margin-bottom: 2rem;
  }
  .dashboard-header h1 {
    color: #2c3e50;
    font-size: 1.8rem;
  }
  .subscription-section {
    background-color: #f9f9f9;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    margin-top: 1rem;
  }
  .subscription-section h2 {
    color: #2c3e50;
    margin-bottom: 1rem;
  }
  .alert {
    padding: 1rem;
    border-radius: 4px;
    margin-bottom: 1rem;
  }
  .alert-success {
    background-color: #d4edda;
    color: #27ae60;
    border-left: 4px solid #27ae60;
  }
  .alert-warning {
    background-color: #f8d7da;
    color: #e74c3c;
    border-left: 4px solid #e74c3c;
  }
  .alert p {
    margin: 0.5rem 0;
  }
  .btn {
    padding: 0.5rem 1rem;
    background-color: #27ae60;
    color: white;
    text-decoration: none;
    border-radius: 4px;
    border: none;
    cursor: pointer;
    font-size: 0.9rem;
    display: inline-block;
  }
  ul {
    list-style-type: none;
    padding: 0;
  }
  ul li {
    padding: 0.5rem;
    border-bottom: 1px solid #eee;
  }
  ul li:last-child {
    border-bottom: none;
  }

  /* CSS for local time display with tooltip */
  .local-time-container {
    position: relative;
    display: inline-block;
    cursor: help;
  }
  .utc-tooltip {
    display: none;
    position: absolute;
    background: #333;
    color: white;
    padding: 2px 6px;
    border-radius: 4px;
    font-size: 0.9em;
    white-space: nowrap;
    z-index: 100;
    left: 0;
    top: 100%;
  }
  .local-time-container:hover .utc-tooltip {
    display: block;
  }

  /* CSS for troubleshooting section */
  .troubleshooting-section {
    background-color: #f9f9f9;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    margin-top: 2rem;
  }

  .troubleshooting-section h2 {
    color: #2c3e50;
    margin-bottom: 1rem;
  }

  .faq-item {
    margin-bottom: 1rem;
    border-bottom: 1px solid #eee;
    padding-bottom: 1rem;
  }

  .faq-question {
    width: 100%;
    text-align: left;
    padding: 1rem;
    background: none;
    border: none;
    cursor: pointer;
    font-size: 1rem;
    color: #2c3e50;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-weight: bold;
  }

  .faq-question:hover {
    background-color: rgba(44, 62, 80, 0.1);
    border-radius: 4px;
  }

  .faq-icon {
    font-size: 1.2rem;
    transition: transform 0.2s;
  }

  .faq-answer {
    display: none;
    padding: 0 1rem 1rem;
    line-height: 1.6;
  }

  .faq-answer ul {
    margin: 0.5rem 0 0 1.5rem;
    padding: 0;
  }

  .faq-answer li {
    margin: 0.3rem 0;
  }

  .faq-answer a {
    color: #3498db;
    text-decoration: none;
  }

  .faq-answer a:hover {
    text-decoration: underline;
  }

  .faq-answer.active {
    display: block;
  }

</style>

<div class="dashboard-container">
  <header class="dashboard-header">
    <h1>Welcome, <%= current_user.email %></h1>
  </header>

  <section class="subscription-section">
    <h2>Your VPN Subscription</h2>
    <% if @has_subscription && @active_subscription.wireguard_client %>
      <div class="alert alert-success">
        <p>✅ You have an active subscription!</p>
        <p>
          Expires at:
          <span class="local-time-container">
            <span id="local-time-text">
              <!-- Fallback for non-JS users -->
              <%= @active_subscription.expires_at.in_time_zone("Etc/UTC").strftime("%Y-%m-%d %H:%M:%S %Z") %>
            </span>
            <span class="utc-tooltip">
              <%= @active_subscription.expires_at %>
            </span>
          </span>
          (local time)
          –
          <span id="countdown">Calculating...</span>
        </p>
        <%= link_to "View WireGuard Client", user_wireguard_client_path(current_user, @active_subscription.wireguard_client), class: "btn" %>
      </div>
    <% else %>
      <div class="alert alert-warning">
        <p>❌ You don't have an active subscription.</p>
        <%= link_to "Subscribe Now", new_user_wireguard_client_path(current_user), class: "btn" %>
      </div>
    <% end %>

    <h2>Expired Subscriptions</h2>
    <% if @expired_subscriptions.any? %>
      <ul>
        <% @expired_subscriptions.each do |subscription| %>
          <li>
            <%= subscription.wireguard_client.name %> (Expired: <%= subscription.expires_at %>)
          </li>
        <% end %>
      </ul>
    <% else %>
      <p>No expired subscriptions.</p>
    <% end %>
  </section>

  <section class="troubleshooting-section">
    <h2>Troubleshooting</h2>

    <div class="faq-item">
      <button class="faq-question">
        Connection Drops <span class="faq-icon">+</span>
      </button>
      <div class="faq-answer">
        <p><strong>Symptoms:</strong> The VPN disconnects frequently or fails to connect.</p>
        <ul>
          <li>Check your internet connection.</li>
          <li>Restart the VPN client.</li>
          <li>Restart your device.</li>
          <li>Check for firewall/antivirus interference.</li>
          <li>Reinstall the VPN configuration.</li>
          <li>Update the VPN app.</li>
        </ul>
      </div>
    </div>

    <div class="faq-item">
      <button class="faq-question">
        Slow Speeds <span class="faq-icon">+</span>
      </button>
      <div class="faq-answer">
        <p><strong>Symptoms:</strong> The VPN connection is active, but browsing/downloads are slower than usual.</p>
        <ul>
          <li>Test your base internet speed.</li>
          <li>Close background applications.</li>
          <li>Check for network congestion.</li>
          <li>Restart your router.</li>
        </ul>
      </div>
    </div>

    <div class="faq-item">
      <button class="faq-question">
        Unable to Access Certain Websites <span class="faq-icon">+</span>
      </button>
      <div class="faq-answer">
        <p><strong>Symptoms:</strong> Some websites or services are blocked or unavailable while connected to the VPN.</p>
        <ul>
          <li>Clear your browser cache.</li>
          <li>Disable IPv6.</li>
          <li>Check for DNS leaks.</li>
          <li>Contact support.</li>
        </ul>
      </div>
    </div>

    <div class="faq-item">
      <button class="faq-question">
        General Tips <span class="faq-icon">+</span>
      </button>
      <div class="faq-answer">
        <p>Keep your app updated and check for announcements. If issues persist, contact support at <a href="mailto:support@ironcryptvpn.com">support@ironcryptvpn.com</a>.</p>
      </div>
    </div>
  </section>

  <script>
    document.querySelectorAll('.faq-question').forEach(button => {
      button.addEventListener('click', () => {
        const faqItem = button.parentElement;
        const answer = faqItem.querySelector('.faq-answer');
        const icon = button.querySelector('.faq-icon');

        if (answer.classList.contains('active')) {
          answer.classList.remove('active');
          icon.textContent = '+';
        } else {
          // Close all other answers
          document.querySelectorAll('.faq-answer').forEach(a => a.classList.remove('active'));
          document.querySelectorAll('.faq-icon').forEach(i => i.textContent = '+');

          // Open this answer
          answer.classList.add('active');
          icon.textContent = '-';
        }
      });
    });

    // Convert and display expiration time in user's local timezone
    document.addEventListener("DOMContentLoaded", function() {
      const utcTime = "<%= @active_subscription.expires_at.iso8601 %>";
      const expiresAt = new Date(utcTime);
      const localTimeElement = document.getElementById("local-time-text");

      // Format local time as DD/MM/YYYY, HHhMM
      const day = String(expiresAt.getDate()).padStart(2, '0');
      const month = String(expiresAt.getMonth() + 1).padStart(2, '0');
      const year = expiresAt.getFullYear();
      const hours = String(expiresAt.getHours()).padStart(2, '0');
      const minutes = String(expiresAt.getMinutes()).padStart(2, '0');
      localTimeElement.textContent = `${day}/${month}/${year}, ${hours}h${minutes}`;

      // Update countdown every second
      function updateCountdown() {
        const now = new Date();
        const diff = expiresAt - now;

        if (diff <= 0) {
          document.getElementById("countdown").textContent = "Expired";
          return;
        }

        const days = Math.floor(diff / (1000 * 60 * 60 * 24));
        const hoursRemaining = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutesRemaining = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));

        document.getElementById("countdown").textContent =
          `${days}d ${hoursRemaining}h ${minutesRemaining}m remaining`;
      }

      updateCountdown();
      setInterval(updateCountdown, 60000); // Update every minute
    });
  </script>
</div>
