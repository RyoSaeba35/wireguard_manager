<style>
  .profile-container {
    max-width: 600px;
    margin: 3rem auto;
    padding: 2rem;
    background-color: #fff;
    border-radius: 12px;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }

  .profile-container h1 {
    text-align: center;
    margin-bottom: 2rem;
    color: #2c3e50;
    font-weight: 600;
  }

  .profile-section {
    margin-bottom: 2rem;
    border-bottom: 1px solid #eee;
    padding-bottom: 1.5rem;
  }

  .profile-section:last-child {
    border-bottom: none;
    padding-bottom: 0;
  }

  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
    padding: 0.5rem 0;
    margin-bottom: 1rem;
  }

  .section-header h2 {
    margin: 0;
    color: #34495e;
    font-size: 1.2rem;
    font-weight: 500;
  }

  .toggle-icon {
    font-size: 1.2rem;
    transition: transform 0.3s ease;
  }

  .form-group {
    margin-bottom: 1.5rem;
    display: none;
  }

  .form-group.active {
    display: block;
  }

  .form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: #2c3e50;
  }

  .form-group input[type="email"],
  .form-group input[type="password"] {
    width: 100%;
    padding: 0.9rem;
    border: 1px solid #ddd;
    border-radius: 6px;
    font-size: 1rem;
    transition: border-color 0.3s ease;
  }

  .form-group input[type="email"]:focus,
  .form-group input[type="password"]:focus {
    border-color: #3498db;
    outline: none;
    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);
  }

  .form-group input[type="submit"] {
    background-color: #2ecc71;
    color: white;
    padding: 0.9rem 1.5rem;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 500;
    width: 100%;
    transition: background-color 0.3s ease;
  }

  .form-group input[type="submit"]:hover {
    background-color: #27ae60;
  }

  .form-group input[type="submit"]:disabled {
    background-color: #95a5a6;
    cursor: not-allowed;
  }

  .profile-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem 0;
  }

  .profile-info span {
    color: #7f8c8d;
  }

  .edit-link {
    color: #3498db;
    text-decoration: none;
    font-size: 0.9rem;
    cursor: pointer;
  }

  .edit-link:hover {
    text-decoration: underline;
  }

  .password-requirements {
    font-size: 0.85rem;
    color: #7f8c8d;
    margin-top: 0.5rem;
    display: none;
  }

  .password-requirements.active {
    display: block;
  }

  .success-message {
    text-align: center;
    color: #27ae60;
    margin-top: 1rem;
    font-weight: 500;
    display: none;
  }

  .error-message {
    color: #e74c3c;
    font-size: 0.85rem;
    margin-top: 0.3rem;
    display: none;
  }

  .profile-value {
    font-weight: 500;
    color: #2c3e50;
  }

  .save-cancel {
    display: flex;
    gap: 1rem;
    margin-top: 1rem;
  }

  .btn-cancel {
    background-color: #ecf0f1;
    color: #7f8c8d;
    padding: 0.9rem 1.5rem;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 500;
    flex: 1;
    transition: all 0.3s ease;
  }

  .btn-cancel:hover {
    background-color: #bdc3c7;
  }

  .btn-save {
    background-color: #2ecc71;
    color: white;
    padding: 0.9rem 1.5rem;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 500;
    flex: 1;
    transition: all 0.3s ease;
  }

  .btn-save:hover {
    background-color: #27ae60;
  }

  .password-strength {
    height: 4px;
    background-color: #ecf0f1;
    border-radius: 2px;
    margin-top: 0.5rem;
    overflow: hidden;
  }

  .password-strength-bar {
    height: 100%;
    width: 0%;
    transition: width 0.3s ease, background-color 0.3s ease;
  }
  @media (max-width: 768px) {
    .profile-container {
      margin: 1.5rem;
      padding: 1.5rem;
    }  }
</style>

<div class="profile-container">
  <h1>Your Profile</h1>

  <% if flash[:notice] %>
    <div class="success-message">
      <%= flash[:notice] %>
    </div>
  <% elsif flash[:alert] %>
    <div class="success-message" style="color: #e74c3c;">
      <%= flash[:alert] %>
    </div>
  <% end %>

  <!-- Email Section -->
  <div class="profile-section">
    <div class="section-header" onclick="toggleSection('email-section')">
      <h2>Email Address</h2>
      <span class="toggle-icon" id="email-toggle">+</span>
    </div>
    <div class="profile-info">
      <span class="profile-value" id="email-value"><%= current_user.email %></span>
      <span class="edit-link" onclick="toggleSection('email-section')">Edit</span>
    </div>
    <div class="form-group" id="email-section">
      <%= form_with(model: current_user, url: update_profile_path, method: :patch, id: "email-form") do |form| %>
        <div class="field">
          <%= form.label :email %>
          <%= form.email_field :email, class: "form-control", value: current_user.email %>
          <% if form.object.errors[:email].any? %>
            <div class="error-message">
              <%= form.object.errors[:email].first %>
            </div>
          <% end %>
        </div>

        <div class="field">
          <%= form.label :current_password, "Current Password (required for changes)" %>
          <%= form.password_field :current_password, class: "form-control", autocomplete: "current-password" %>
          <% if form.object.errors[:current_password].any? %>
            <div class="error-message">
              <%= form.object.errors[:current_password].first %>
            </div>
          <% end %>
          <small class="form-text text-muted">We need your current password to confirm your changes</small>
        </div>

        <div class="save-cancel">
          <button type="button" class="btn-cancel" onclick="cancelEdit('email-section')">Cancel</button>
          <%= form.submit "Update Email", class: "btn-save", id: "email-submit" %>
        </div>
      <% end %>
    </div>
  </div>

  <!-- Password Section -->
  <div class="profile-section">
    <div class="section-header" onclick="toggleSection('password-section')">
      <h2>Password</h2>
      <span class="toggle-icon" id="password-toggle">+</span>
    </div>
    <div class="profile-info">
      <span>**********</span>
      <span class="edit-link" onclick="toggleSection('password-section')">Change</span>
    </div>
    <div class="form-group" id="password-section">
      <%= form_with(model: current_user, url: update_profile_path, method: :patch, id: "password-form") do |form| %>
        <div class="field">
          <%= form.label :current_password, "Current Password" %>
          <%= form.password_field :current_password, class: "form-control", autocomplete: "current-password" %>
          <% if form.object.errors[:current_password].any? %>
            <div class="error-message">
              <%= form.object.errors[:current_password].first %>
            </div>
          <% end %>
        </div>

        <div class="field">
          <%= form.label :password, "New Password" %>
          <%= form.password_field :password, class: "form-control", autocomplete: "new-password", oninput: "checkPasswordStrength(this.value)" %>
          <div class="password-strength">
            <div class="password-strength-bar" id="password-strength-bar"></div>
          </div>
          <div class="password-requirements" id="password-requirements">
            <p>Password must contain:</p>
            <ul>
              <li id="length">At least 8 characters</li>
              <li id="uppercase">At least one uppercase letter</li>
              <li id="lowercase">At least one lowercase letter</li>
              <li id="number">At least one number</li>
              <li id="special">At least one special character</li>
            </ul>
          </div>
          <% if form.object.errors[:password].any? %>
            <div class="error-message">
              <%= form.object.errors[:password].first %>
            </div>
          <% end %>
          <small class="form-text text-muted">Leave blank if you don't want to change it</small>
        </div>

        <div class="field">
          <%= form.label :password_confirmation, "Confirm New Password" %>
          <%= form.password_field :password_confirmation, class: "form-control", autocomplete: "new-password" %>
          <% if form.object.errors[:password_confirmation].any? %>
            <div class="error-message">
              <%= form.object.errors[:password_confirmation].first %>
            </div>
          <% end %>
        </div>

        <div class="save-cancel">
          <button type="button" class="btn-cancel" onclick="cancelEdit('password-section')">Cancel</button>
          <%= form.submit "Update Password", class: "btn-save", id: "password-submit" %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
  // Toggle section visibility
  function toggleSection(sectionId) {
    const section = document.getElementById(sectionId);
    const toggleIcon = document.getElementById(sectionId + '-toggle');

    if (section.classList.contains('active')) {
      section.classList.remove('active');
      toggleIcon.textContent = '+';
      toggleIcon.style.transform = 'rotate(0deg)';

      // Reset form if collapsing
      if (sectionId === 'email-section') {
        document.getElementById('email-value').textContent = '<%= j current_user.email %>';
        document.querySelector('#email-form input[type="email"]').value = '<%= j current_user.email %>';
        document.querySelector('#email-form input[type="password"]').value = '';
        document.querySelectorAll('#email-form .error-message').forEach(el => {
          el.style.display = 'none';
        });
      } else if (sectionId === 'password-section') {
        document.querySelector('#password-form input[type="password"]').forEach(input => {
          input.value = '';
        });
        document.getElementById('password-strength-bar').style.width = '0%';
        document.getElementById('password-requirements').classList.remove('active');
        document.querySelectorAll('#password-requirements li').forEach(li => {
          li.style.color = '#7f8c8d';
        });
        document.querySelectorAll('#password-form .error-message').forEach(el => {
          el.style.display = 'none';
        });
      }
    } else {
      section.classList.add('active');
      toggleIcon.textContent = '−';
      toggleIcon.style.transform = 'rotate(180deg)';

      if (sectionId === 'password-section') {
        document.getElementById('password-requirements').classList.add('active');
      }
    }
  }

  // Cancel edit
  function cancelEdit(sectionId) {
    toggleSection(sectionId);
  }

  // Check password strength
  function checkPasswordStrength(password) {
    const strengthBar = document.getElementById('password-strength-bar');
    let strength = 0;

    // Check length
    if (password.length >= 8) strength += 1;
    document.getElementById('length').style.color = password.length >= 8 ? '#27ae60' : '#7f8c8d';

    // Check for uppercase
    if (/[A-Z]/.test(password)) strength += 1;
    document.getElementById('uppercase').style.color = /[A-Z]/.test(password) ? '#27ae60' : '#7f8c8d';

    // Check for lowercase
    if (/[a-z]/.test(password)) strength += 1;
    document.getElementById('lowercase').style.color = /[a-z]/.test(password) ? '#27ae60' : '#7f8c8d';

    // Check for numbers
    if (/[0-9]/.test(password)) strength += 1;
    document.getElementById('number').style.color = /[0-9]/.test(password) ? '#27ae60' : '#7f8c8d';

    // Check for special characters
    if (/[^A-Za-z0-9]/.test(password)) strength += 1;
    document.getElementById('special').style.color = /[^A-Za-z0-9]/.test(password) ? '#27ae60' : '#7f8c8d';

    // Update strength bar
    const strengthPercentage = (strength / 5) * 100;
    strengthBar.style.width = strengthPercentage + '%';

    // Set color based on strength
    if (strengthPercentage < 40) {
      strengthBar.style.backgroundColor = '#e74c3c';
    } else if (strengthPercentage < 80) {
      strengthBar.style.backgroundColor = '#f39c12';
    } else {
      strengthBar.style.backgroundColor = '#27ae60';
    }
  }

  // Show flash messages on page load
  document.addEventListener('DOMContentLoaded', function() {
    const successMessage = document.querySelector('.success-message');
    if (successMessage) {
      setTimeout(() => {
        successMessage.style.opacity = '0';
        setTimeout(() => {
          successMessage.style.display = 'none';
          successMessage.style.opacity = '1';
        }, 500);
      }, 3000);
    }
  });
</script>
